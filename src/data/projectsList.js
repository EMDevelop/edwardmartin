const projectsList = [
  {
    name: `VeganSwap`,
    description: `My goal of this project is to make it easier for people to use vegan alternatives to the meals and products they love. I am hoping to bring together a community of Vegan, Vegetarian and Meat/Dairy eaters (so everybody), and work together to add alternatives using the apps Add" functionality.`,
    github: `https://github.com/EMDevelop/veganswap`,
    language: `Javascript`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/veganswap/veganswap.gif`,
    tools: `React JS, Express JS, PostgreSQL, Heroku`,
    website: `www.veganswap.co.uk`,
  },
  {
    name: `Just2Connect`,
    description: `Welcome to my first ever website, built from scratch using ReactJS for a local Telephone Systems business Just2Connect.`,
    github: `https://github.com/EMDevelop/Just2ConnectOfficial`,
    language: `Javascript`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/just2connect/j2c.gif`,
    tools: `React JS, Vercel`,
    website: `www.just2connect.com`,
  },
  {
    name: `Chitter`,
    description: `This application was built as a clone of Twitter, although it has the functionality of a chatroom. The project was built over a weekend, planned and modelled on Friday and then executed on Saturday and Sunday. I mainly enjoyed learning how to store passwords securely (using Becrypt with SALT and PEPPER hashing), while also building everything with SRP/Encapsulation/Separation of concerns in mind.`,
    github: `https://github.com/EMDevelop/chitter-challenge`,
    language: `Ruby`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/Chitter/gifs/signup.gif`,
    tools: `Sinatra, PostgreSQL, RSpec, Capybara, Bcrypt`,
    website: ``,
  },
  {
    name: `Bowling`,
    description: `This is an application in which a user can input scores from their game of bowling, and receive a score as an output.`,
    github: `https://github.com/EMDevelop/BowlingScorecardJS`,
    language: `Javascript`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/Bowling/BowlingUI.gif`,
    tools: `Vanilla JS, Jasmine`,
    website: ``,
  },
  {
    name: `Notes App`,
    description: `This is a notes app where a user can store notes, inspired by Evernote. You can add notes, delete notes, change the font, store all of the notes in local memory (and fonts in cookies).`,
    github: `https://github.com/EMDevelop/NotesApp`,
    language: `Javascript`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/notesApp/notes.gif`,
    tools: `Vanilla JS, Heroku, PostgreSQL`,
    website: ``,
  },
  {
    name: `Crypto News`,
    description: `A single page web app which reads and summarises cryptocurrency news from the Guardian API. The application makes a request to Pipedream, which I have configured to send a response back to my client with the latest stories related to Blockchain and Cryptocurrency from the Guardian.`,
    github: `https://github.com/EMDevelop/HeadlineNews`,
    language: `Javascript`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/CryptoNews/headlineNews.gif`,
    tools: `Vanilla JS, Pipedream, Guardian API`,
    website: ``,
  },
  {
    name: `Bank Tech Test`,
    description: `This is an example of a coding test, built in Javascript and tested using the Jasmine testing framework. A user can add multiple transactions (both withdraws and deposits) and then, once finished transacting, request for a statement of their previous transactions.`,
    github: `https://github.com/EMDevelop/bankTechTest`,
    language: `Javascript`,
    image: `https://github.com/EMDevelop/public_resources/raw/main/images/banking/attemptTwo.png`,
    tools: `Vanilla JS, Console, Jasmine`,
    website: ``,
  },
  {
    name: `Ethereum Address Checker`,
    description: `This project can be used to check whether 2 or more Ethereum wallets have made transactions between eachother, or have any addresses in common that they've sent/received ERC-20 Tokens or Ethereum to/from. I attempted this project before starting Makers Academy, and then came back to it within the course to include TDD, Separation of concerns, Logical naming and added various functionality. `,
    github: `https://github.com/EMDevelop/cryptoAddressWeb`,
    language: `Ruby`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/CryptoAddressWeb/EthereumAddressChecker.gif`,
    tools: `Command line, Etherscan API`,
    website: ``,
  },
  {
    name: `Takeaway App`,
    description: `This is a Command Line based application which allows customers to order food from a menu. I call on the Twillo API to send an order confirmation once a customer places an order. I stored my food menu on Google Sheets, and used an external library to fetch the data.`,
    github: `https://github.com/EMDevelop/Takeaway-App`,
    language: `Ruby`,
    image: `https://raw.githubusercontent.com/EMDevelop/public_resources/main/gifs/takeaway/takeawayApp.gif`,
    tools: `Command Line, Twillo API, Google Sheets`,
    website: ``,
  },
  // {
  //   name: ``,
  //   description: ``,
  //   github: ``,
  //   language: ``,
  //   image: ``,
  //   tools: ``,
  //   website: ``,
  // },
];

export default projectsList;
